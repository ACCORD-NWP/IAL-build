#!/usr/bin/env python3
# -*- coding: utf-8 -*-
from __future__ import print_function, absolute_import, unicode_literals, division
"""
Make and checkout a new IAL branch with the GCO-classical nomenclature (<user>_<release>_<radical>),
based on a given reference.
"""
import os
import argparse
import sys

# Automatically set the python path
repo_path = os.path.dirname(os.path.dirname(os.path.realpath(__file__)))
sys.path.insert(0, os.path.join(repo_path, 'src'))

from ial_build.repositories import IALview
from ial_build.config import DEFAULT_IAL_REPO


def main(repository, start_reference, radical):
    """
    Make and checkout a new IAL branch with the GCO-classical nomenclature (<user>_<release>_<radical>),
    based on a given **start_reference**.

    :param repository: the IAL repository to use
    """
    v = IALview(repository, start_reference,
                need_for_checkout=False,
                restore_initial_checkout_eventually=False)
    b = v.new_branch_classical_nomenclature(radical)
    v.git_proxy.checkout_new_branch(b, start_ref=start_reference)


if __name__ == '__main__':
    parser = argparse.ArgumentParser(description='Make and checkout a new IAL branch with the GCO-classical ' +
                                                 'nomenclature (<user>_<release>_<radical>), ' +
                                                 'based on a given reference.')
    parser.add_argument('radical',
                        help='Purpose of the branch, which will be named <logname>_<release>_<radical>.')
    parser.add_argument('-s', '--start_reference',
                        help='Reference of the start of the branch. ' +
                             'Can be a tag (e.g. CY48T3, CY48T1_op1.04), commit (e.g. 74ad4f8c), ' +
                             'or branch (e.g. gco_CY48T1_op1 or gh-mary/merge_CY48T3_and_48R1). ' +
                             'Starting from a branch is disadvised, as it may lead to erroneous referencing; ' +
                             'make sure the branch is up-to-date. ' +
                             'Default is the currently checkedout ref (HEAD).',
                        default='HEAD')
    parser.add_argument('-r', '--repository',
                        help='Location of the IAL Git repository (defaults to: {}).'.format(DEFAULT_IAL_REPO),
                        default=DEFAULT_IAL_REPO)
    args = parser.parse_args()
    main(args.repository,
         args.start_reference,
         args.radical)
